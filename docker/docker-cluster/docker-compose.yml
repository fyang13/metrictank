version: '2'

services:
  metrictank0:
    hostname: metrictank0
    image: grafana/metrictank
    expose:
     - 6060
    volumes:
      - ../../build/metrictank:/usr/bin/metrictank
      - ./metrictank.ini:/etc/metrictank/metrictank.ini
      - ./storage-schemas.conf:/etc/metrictank/storage-schemas.conf
      - ./storage-aggregation.conf:/etc/metrictank/storage-aggregation.conf
    environment:
      WAIT_HOSTS: kafka:9092,cassandra:9042
      WAIT_TIMEOUT: 30
      MT_CASSANDRA_CREATE_KEYSPACE: "true"
      MT_CASSANDRA_IDX_CREATE_KEYSPACE: "true"
      MT_CLUSTER_BIND_ADDR: "metrictank0:7946"
      MT_CLUSTER_MODE: multi
      MT_CLUSTER_PRIMARY_NODE: "true"
      MT_INSTANCE: metrictank0
      MT_KAFKA_CLUSTER_PARTITIONS: 0,1,2,3
      MT_KAFKA_MDM_IN_PARTITIONS: 0,1,2,3
      MT_LOG_LEVEL: info
    links:
     - cassandra

  metrictank1:
    hostname: metrictank1
    image: grafana/metrictank
    expose:
     - 6060
    volumes:
      - ../../build/metrictank:/usr/bin/metrictank
      - ./metrictank.ini:/etc/metrictank/metrictank.ini
      - ./storage-schemas.conf:/etc/metrictank/storage-schemas.conf
      - ./storage-aggregation.conf:/etc/metrictank/storage-aggregation.conf
    environment:
      WAIT_HOSTS: kafka:9092,cassandra:9042,metrictank0:6060
      WAIT_TIMEOUT: 30
      MT_CLUSTER_BIND_ADDR: "metrictank1:7946"
      MT_CLUSTER_MODE: multi
      MT_CLUSTER_PEERS: metrictank0,metrictank2,metrictank3
      MT_CLUSTER_PRIMARY_NODE: "false"
      MT_INSTANCE: metrictank1
      MT_KAFKA_CLUSTER_PARTITIONS: 0,1,2,3
      MT_KAFKA_MDM_IN_PARTITIONS: 0,1,2,3
      MT_LOG_LEVEL: info
    links:
     - cassandra
     - metrictank0

  metrictank2:
    hostname: metrictank2
    image: grafana/metrictank
    expose:
     - 6060
    volumes:
      - ../../build/metrictank:/usr/bin/metrictank
      - ./metrictank.ini:/etc/metrictank/metrictank.ini
      - ./storage-schemas.conf:/etc/metrictank/storage-schemas.conf
      - ./storage-aggregation.conf:/etc/metrictank/storage-aggregation.conf
    environment:
      WAIT_HOSTS: kafka:9092,cassandra:9042,metrictank0:6060
      WAIT_TIMEOUT: 30
      MT_CLUSTER_BIND_ADDR: "metrictank2:7946"
      MT_CLUSTER_MODE: multi
      MT_CLUSTER_PEERS: metrictank0,metrictank1,metrictank3
      MT_CLUSTER_PRIMARY_NODE: "true"
      MT_INSTANCE: metrictank2
      MT_KAFKA_CLUSTER_PARTITIONS: 4,5,6,7
      MT_KAFKA_MDM_IN_PARTITIONS: 4,5,6,7
      MT_LOG_LEVEL: info
    links:
     - cassandra
     - metrictank0

  metrictank3:
    hostname: metrictank3
    image: grafana/metrictank
    expose:
     - 6060
    volumes:
      - ../../build/metrictank:/usr/bin/metrictank
      - ./metrictank.ini:/etc/metrictank/metrictank.ini
      - ./storage-schemas.conf:/etc/metrictank/storage-schemas.conf
      - ./storage-aggregation.conf:/etc/metrictank/storage-aggregation.conf
    environment:
      WAIT_HOSTS: kafka:9092,cassandra:9042,metrictank0:6060
      WAIT_TIMEOUT: 30
      MT_CLUSTER_BIND_ADDR: "metrictank3:7946"
      MT_CLUSTER_MODE: multi
      MT_CLUSTER_PEERS: metrictank0,metrictank1,metrictank2
      MT_CLUSTER_PRIMARY_NODE: "false"
      MT_INSTANCE: metrictank3
      MT_KAFKA_CLUSTER_PARTITIONS: 4,5,6,7
      MT_KAFKA_MDM_IN_PARTITIONS: 4,5,6,7
      MT_LOG_LEVEL: info
    links:
     - cassandra
     - metrictank0

  cassandra:
    hostname: cassandra
    image: cassandra:3.9
    environment:
      MAX_HEAP_SIZE: 1G
      HEAP_NEWSIZE: 256M
    ports:
     - "9042:9042"

  graphite:
    hostname: graphite
    image: raintank/graphite-mt
    ports:
     - "8080:80"
    environment:
      GRAPHITE_CLUSTER_SERVERS: metrictank0:6060
      GRAPHITE_STATSD_HOST: statsdaemon
      SINGLE_TENANT: "true"
      WSGI_PROCESSES: 4
      WSGI_THREADS: 25

  grafana:
    hostname: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-datasources:/etc/grafana/provisioning/datasources
      - ../cfg/grafana-dashboards-main-extra-dockprom:/etc/grafana/provisioning/dashboards
      - ../../dashboards:/var/lib/grafana/dashboards

  kafka:
    hostname: kafka
    image: raintank/kafka
    environment:
      ADVERTISED_HOST: kafka
      NUM_PARTITIONS: 8
    ports:
      - "2181:2181"
      - "9092:9092"
      - "9999:9999"
    volumes:
      - /tmp/kafka-logs

  statsdaemon:
    hostname: statsdaemon
    image: raintank/statsdaemon
    ports:
     - "8125:8125/udp"
    volumes:
     - "./statsdaemon.ini:/etc/statsdaemon.ini"

  # easiest to just use a separate graphite server for monitoring
  graphitemon:
    hostname: graphitemon
    image:  graphiteapp/graphite-statsd
    ports:
      - "2003:2003"
      - "80:80"
    volumes:
     - "./carbon.conf:/opt/graphite/conf/carbon.conf"
     - "./graphite-storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf"

  jaeger:
    hostname: jaeger
    image:  jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  prometheus:
    image: prom/prometheus:v2.2.1
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
     - "9090:9090"
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.15.2
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.28.3
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    ports:
      - "6061:6061"
      - "6062:6062"
      - "6063:6063"
      - "8081:8081"
      - "8082:8082"
    volumes:
      - ./caddy/:/etc/caddy/
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"
